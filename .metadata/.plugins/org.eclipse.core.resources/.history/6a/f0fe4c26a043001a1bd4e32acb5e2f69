package br.com.mercado;

public class ProductDAO {

	import ConnectionFactory;
	import java.sql.Connection;
	import java.sql.PreparedStatement;
	import java.sql.ResultSet;
	import java.sql.SQLException;
	import java.util.ArrayList;
	import java.util.List;
	import java.util.logging.Level;
	import java.util.logging.Logger;
	//import javax.swing.JOptionPane;
	import Product;



	public void create(Product p) {
	        
	        Connection con = ConnectionFactory.getConnection();
	        
	        PreparedStatement stmt = null;

	        try {
	            stmt = con.prepareStatement("INSERT INTO produto (descricao,qtd,preco)VALUES(?,?,?)");
	            stmt.setString(1, p.getDescricao());
	            stmt.setInt(2, p.getQtd());
	            stmt.setDouble(3, p.getPreco());

	            stmt.executeUpdate();

	            JOptionPane.showMessageDialog(null, "Salvo com sucesso!");
	        } catch (SQLException ex) {
	            System.out.println(ex);
	        } finally {
	            ConnectionFactory.closeConnection(con, stmt);
	        }

	    }

	    public List<Product> read() {

	        Connection con = ConnectionFactory.getConnection();
	        
	        PreparedStatement stmt = null;
	        ResultSet rs = null;

	        List<Product> produtos = new ArrayList<>();

	        try {
	            stmt = con.prepareStatement("SELECT * FROM produto");
	            rs = stmt.executeQuery();

	            while (rs.next()) {

	            	Product produto = new Product();

	                produto.setId(rs.getInt("id"));
	                produto.setDescricao(rs.getString("descricao"));
	                produto.setQtd(rs.getInt("qtd"));
	                produto.setPreco(rs.getDouble("preco"));
	                produtos.add(produto);
	            }

	        } catch (SQLException ex) {
	            Logger.getLogger(ProductDAO.class.getName()).log(Level.SEVERE, null, ex);
	        } finally {
	            ConnectionFactory.closeConnection(con, stmt, rs);
	        }

	        return produtos;

	    }
	    public List<Product> readForDesc(String desc) {

	        Connection con = ConnectionFactory.getConnection();
	        
	        PreparedStatement stmt = null;
	        ResultSet rs = null;

	        List<Product> produtos = new ArrayList<>();

	        try {
	            stmt = con.prepareStatement("SELECT * FROM produto WHERE descricao LIKE ?");
	            stmt.setString(1, "%"+desc+"%");
	            
	            rs = stmt.executeQuery();

	            while (rs.next()) {

	            	Product produto = new Product();

	                produto.setId(rs.getInt("id"));
	                produto.setDescricao(rs.getString("descricao"));
	                produto.setQtd(rs.getInt("qtd"));
	                produto.setPreco(rs.getDouble("preco"));
	                produtos.add(produto);
	            }

	        } catch (SQLException ex) {
	            Logger.getLogger(ProductDAO.class.getName()).log(Level.SEVERE, null, ex);
	        } finally {
	            ConnectionFactory.closeConnection(con, stmt, rs);
	        }

	        return produtos;

	    }

	    public void update(Product p) {

	        Connection con = ConnectionFactory.getConnection();
	        
	        PreparedStatement stmt = null;

	        try {
	            stmt = con.prepareStatement("UPDATE produto SET descricao = ? ,qtd = ?,preco = ? WHERE id = ?");
	            stmt.setString(1, p.getDescricao());
	            stmt.setInt(2, p.getQtd());
	            stmt.setDouble(3, p.getPreco());
	            stmt.setInt(4, p.getId());

	            stmt.executeUpdate();

	            JOptionPane.showMessageDialog(null, "Atualizado com sucesso!");
	        } catch (SQLException ex) {
	            JOptionPane.showMessageDialog(null, "Erro ao atualizar: " + ex);
	        } finally {
	            ConnectionFactory.closeConnection(con, stmt);
	        }

	    }
	    public void delete(Product p) {

	        Connection con = ConnectionFactory.getConnection();
	        
	        PreparedStatement stmt = null;

	        try {
	            stmt = con.prepareStatement("DELETE FROM produto WHERE id = ?");
	            stmt.setInt(1, p.getId());

	            stmt.executeUpdate();

	            JOptionPane.showMessageDialog(null, "Excluido com sucesso!");
	        } catch (SQLException ex) {
	            JOptionPane.showMessageDialog(null, "Erro ao excluir: " + ex);
	        } finally {
	            ConnectionFactory.closeConnection(con, stmt);
	        }

	    }

}
